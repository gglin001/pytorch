(pyenv) root@allen-archlinux:.../pytorch# python demos/slide/target_4_module.py

[2023-06-06 16:42:57,224] torch._dynamo.eval_frame: [DEBUG] skipping __init__ /opt/conda/envs/pyenv/lib/python3.8/contextlib.py
[2023-06-06 16:42:57,224] torch._dynamo.eval_frame: [DEBUG] skipping __enter__ /opt/conda/envs/pyenv/lib/python3.8/contextlib.py
[2023-06-06 16:42:57,224] torch._dynamo.eval_frame: [DEBUG] skipping __init__ /opt/conda/envs/pyenv/lib/python3.8/contextlib.py
[2023-06-06 16:42:57,224] torch._dynamo.eval_frame: [DEBUG] skipping __enter__ /opt/conda/envs/pyenv/lib/python3.8/contextlib.py
[2023-06-06 16:42:57,224] torch._dynamo.eval_frame: [DEBUG] skipping enable_dynamic /repos/gglin001/pytorch/torch/_dynamo/eval_frame.py
[2023-06-06 16:42:57,224] torch._dynamo.eval_frame: [DEBUG] skipping _wrapped_call_impl /repos/gglin001/pytorch/torch/nn/modules/module.py
[2023-06-06 16:42:57,224] torch._dynamo.eval_frame: [DEBUG] skipping _call_impl /repos/gglin001/pytorch/torch/nn/modules/module.py
[2023-06-06 16:42:57,224] torch._dynamo.symbolic_convert: [INFO] Step 1: torchdynamo start tracing forward demos/slide/target_4_module.py:29
[2023-06-06 16:42:57,225] torch._dynamo.variables.builder: [DEBUG] wrap_to_fake L['x'] (10, 10) None None
[2023-06-06 16:42:57,226] torch._dynamo.symbolic_convert: [DEBUG] TRACE starts_line demos/slide/target_4_module.py:31
[2023-06-06 16:42:57,226] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_FAST x []
[2023-06-06 16:42:57,226] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_CONST 1.0 [TensorVariable()]
[2023-06-06 16:42:57,226] torch._dynamo.symbolic_convert: [DEBUG] TRACE INPLACE_SUBTRACT None [TensorVariable(), ConstantVariable(float)]
[2023-06-06 16:42:57,227] torch._dynamo.symbolic_convert: [DEBUG] TRACE STORE_FAST x [TensorVariable()]
[2023-06-06 16:42:57,227] torch._dynamo.symbolic_convert: [DEBUG] TRACE starts_line demos/slide/target_4_module.py:32
[2023-06-06 16:42:57,227] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_FAST x []
[2023-06-06 16:42:57,227] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_ATTR sum [TensorVariable()]
[2023-06-06 16:42:57,227] torch._dynamo.symbolic_convert: [DEBUG] TRACE CALL_FUNCTION 0 [GetAttrVariable(TensorVariable(), sum)]
[2023-06-06 16:42:57,228] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_CONST 0.0 [TensorVariable()]
[2023-06-06 16:42:57,228] torch._dynamo.symbolic_convert: [DEBUG] TRACE COMPARE_OP > [TensorVariable(), ConstantVariable(float)]
[2023-06-06 16:42:57,229] torch._dynamo.symbolic_convert: [DEBUG] TRACE POP_JUMP_IF_FALSE 38 [TensorVariable()]
[2023-06-06 16:42:57,229] torch._dynamo.symbolic_convert: [DEBUG] generic_jump triggered compile
[2023-06-06 16:42:57,229] torch._dynamo.output_graph: [DEBUG] COMPILING GRAPH due to GraphCompileReason(reason='generic_jump TensorVariable()', user_stack=[<FrameSummary file demos/slide/target_4_module.py, line 32 in forward>], graph_break=True)
compile_and_call_fx_graph - log starts
[2023-06-06 16:42:57,230] torch._dynamo.output_graph.__graph_code: [DEBUG] TRACED GRAPH
 ===== __compiled_fn_0 =====
 <eval_with_key>.0 class GraphModule(torch.nn.Module):
    def forward(self, L_x_ : torch.Tensor):
        l_x_ = L_x_

        # File: demos/slide/target_4_module.py:31, code: x -= 1.0  # sum ==1
        l_x_ -= 1.0;  isub = l_x_;  l_x_ = None

        # File: demos/slide/target_4_module.py:32, code: if x.sum() > 0.0:
        sum_1 = isub.sum()
        gt = sum_1 > 0.0;  sum_1 = None
        return (isub, gt)


[2023-06-06 16:42:57,230] torch._dynamo.output_graph.__graph: [DEBUG] TRACED GRAPH
 __compiled_fn_0 <eval_with_key>.0 opcode         name    target                    args           kwargs
-------------  ------  ------------------------  -------------  --------
placeholder    l_x_    L_x_                      ()             {}
call_function  isub    <built-in function isub>  (l_x_, 1.0)    {}
call_method    sum_1   sum                       (isub,)        {}
call_function  gt      <built-in function gt>    (sum_1, 0.0)   {}
output         output  output                    ((isub, gt),)  {}

[2023-06-06 16:42:57,233] torch._dynamo.output_graph: [INFO] Step 2: calling compiler function my_compiler
my_compiler() called with FX graph:
[2023-06-06 16:42:57,233] torch._dynamo.output_graph: [INFO] Step 2: done compiler function my_compiler

compile_and_call_fx_graph - compiled_fn before disable(): __compiled_fn_0:
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='L_x_', argrepr='L_x_', offset=0, starts_line=5, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=2, argval='l_x_', argrepr='l_x_', offset=2, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=2, argval='l_x_', argrepr='l_x_', offset=4, starts_line=6, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval=1.0, argrepr='1.0', offset=6, starts_line=None, is_jump_target=False)
Instruction(opname='INPLACE_SUBTRACT', opcode=56, arg=None, argval=None, argrepr='', offset=8, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=2, argval='l_x_', argrepr='l_x_', offset=10, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=2, argval='l_x_', argrepr='l_x_', offset=12, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=3, argval='isub', argrepr='isub', offset=14, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=16, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=2, argval='l_x_', argrepr='l_x_', offset=18, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=3, argval='isub', argrepr='isub', offset=20, starts_line=7, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=0, argval='sum', argrepr='sum', offset=22, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=0, argval=0, argrepr='', offset=24, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=4, argval='sum_1', argrepr='sum_1', offset=26, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=4, argval='sum_1', argrepr='sum_1', offset=28, starts_line=8, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=2, argval=0.0, argrepr='0.0', offset=30, starts_line=None, is_jump_target=False)
Instruction(opname='COMPARE_OP', opcode=107, arg=4, argval='>', argrepr='>', offset=32, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=5, argval='gt', argrepr='gt', offset=34, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=36, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=4, argval='sum_1', argrepr='sum_1', offset=38, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=3, argval='isub', argrepr='isub', offset=40, starts_line=9, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=5, argval='gt', argrepr='gt', offset=42, starts_line=None, is_jump_target=False)
Instruction(opname='BUILD_TUPLE', opcode=102, arg=2, argval=2, argrepr='', offset=44, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=46, starts_line=None, is_jump_target=False)


compile_and_call_fx_graph - compiled_fn after disable(): __compiled_fn_0:
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=0, argval='isinstance', argrepr='isinstance', offset=0, starts_line=268, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=4, argval='self', argrepr='self', offset=2, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=1, argval='DisableContext', argrepr='DisableContext', offset=4, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=2, argval=2, argrepr='', offset=6, starts_line=None, is_jump_target=False)
Instruction(opname='POP_JUMP_IF_TRUE', opcode=115, arg=48, argval=48, argrepr='', offset=8, starts_line=267, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=2, argval='torch', argrepr='torch', offset=10, starts_line=269, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=3, argval='fx', argrepr='fx', offset=12, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=4, argval='_symbolic_trace', argrepr='_symbolic_trace', offset=14, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=5, argval='is_fx_tracing', argrepr='is_fx_tracing', offset=16, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=0, argval=0, argrepr='', offset=18, starts_line=None, is_jump_target=False)
Instruction(opname='POP_JUMP_IF_FALSE', opcode=114, arg=48, argval=48, argrepr='', offset=20, starts_line=267, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=6, argval='config', argrepr='config', offset=22, starts_line=271, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=7, argval='error_on_nested_fx_trace', argrepr='error_on_nested_fx_trace', offset=24, starts_line=None, is_jump_target=False)
Instruction(opname='POP_JUMP_IF_FALSE', opcode=114, arg=38, argval=38, argrepr='', offset=26, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=8, argval='RuntimeError', argrepr='RuntimeError', offset=28, starts_line=272, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval='Detected that you are using FX to symbolically trace a dynamo-optimized function. This is not supported at the moment.', argrepr="'Detected that you are using FX to symbolically trace a dynamo-optimized function. This is not supported at the moment.'", offset=30, starts_line=273, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=32, starts_line=272, is_jump_target=False)
Instruction(opname='RAISE_VARARGS', opcode=130, arg=1, argval=1, argrepr='', offset=34, starts_line=None, is_jump_target=False)
Instruction(opname='JUMP_FORWARD', opcode=110, arg=10, argval=48, argrepr='to 48', offset=36, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=2, argval='fn', argrepr='fn', offset=38, starts_line=277, is_jump_target=True)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='args', argrepr='args', offset=40, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='kwargs', argrepr='kwargs', offset=42, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION_EX', opcode=142, arg=1, argval=1, argrepr='', offset=44, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=46, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=3, argval='on_enter', argrepr='on_enter', offset=48, starts_line=279, is_jump_target=True)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=0, argval=0, argrepr='', offset=50, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=52, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=9, argval='set_eval_frame', argrepr='set_eval_frame', offset=54, starts_line=280, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=1, argval='callback', argrepr='callback', offset=56, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=58, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=2, argval='prior', argrepr='prior', offset=60, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=0, argval='backend_ctx_ctor', argrepr='backend_ctx_ctor', offset=62, starts_line=281, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=0, argval=0, argrepr='', offset=64, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=3, argval='backend_ctx', argrepr='backend_ctx', offset=66, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=3, argval='backend_ctx', argrepr='backend_ctx', offset=68, starts_line=282, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=10, argval='__enter__', argrepr='__enter__', offset=70, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=0, argval=0, argrepr='', offset=72, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=74, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=11, argval='enable_dynamic', argrepr='enable_dynamic', offset=76, starts_line=283, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=4, argval='self', argrepr='self', offset=78, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=12, argval='dynamic', argrepr='dynamic', offset=80, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=4, argval='self', argrepr='self', offset=82, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=13, argval='export', argrepr='export', offset=84, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=2, argval=2, argrepr='', offset=86, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=4, argval='dynamic_ctx', argrepr='dynamic_ctx', offset=88, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=4, argval='dynamic_ctx', argrepr='dynamic_ctx', offset=90, starts_line=284, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=10, argval='__enter__', argrepr='__enter__', offset=92, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=0, argval=0, argrepr='', offset=94, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=96, starts_line=None, is_jump_target=False)
Instruction(opname='SETUP_FINALLY', opcode=122, arg=14, argval=114, argrepr='to 114', offset=98, starts_line=285, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=2, argval='fn', argrepr='fn', offset=100, starts_line=288, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='args', argrepr='args', offset=102, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='kwargs', argrepr='kwargs', offset=104, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION_EX', opcode=142, arg=1, argval=1, argrepr='', offset=106, starts_line=None, is_jump_target=False)
Instruction(opname='POP_BLOCK', opcode=87, arg=None, argval=None, argrepr='', offset=108, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FINALLY', opcode=162, arg=2, argval=114, argrepr='to 114', offset=110, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=112, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=9, argval='set_eval_frame', argrepr='set_eval_frame', offset=114, starts_line=290, is_jump_target=True)
Instruction(opname='LOAD_FAST', opcode=124, arg=2, argval='prior', argrepr='prior', offset=116, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=118, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=120, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=4, argval='dynamic_ctx', argrepr='dynamic_ctx', offset=122, starts_line=291, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=14, argval='__exit__', argrepr='__exit__', offset=124, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=126, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=128, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=130, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=3, argval=3, argrepr='', offset=132, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=134, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=3, argval='backend_ctx', argrepr='backend_ctx', offset=136, starts_line=292, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=14, argval='__exit__', argrepr='__exit__', offset=138, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=140, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=142, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=144, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=3, argval=3, argrepr='', offset=146, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=148, starts_line=None, is_jump_target=False)
Instruction(opname='END_FINALLY', opcode=88, arg=None, argval=None, argrepr='', offset=150, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=152, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=154, starts_line=None, is_jump_target=False)


create_call_resume_at - __resume_at_20_1 - new_code:
Instruction(opname='JUMP_ABSOLUTE', opcode=113, arg=22, argval=22, argrepr='', offset=0, starts_line=32, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=2, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval=1.0, argrepr='1.0', offset=4, starts_line=None, is_jump_target=False)
Instruction(opname='INPLACE_SUBTRACT', opcode=56, arg=None, argval=None, argrepr='', offset=6, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=1, argval='x', argrepr='x', offset=8, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=10, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=0, argval='sum', argrepr='sum', offset=12, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=0, argval=0, argrepr='', offset=14, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=2, argval=0.0, argrepr='0.0', offset=16, starts_line=None, is_jump_target=False)
Instruction(opname='COMPARE_OP', opcode=107, arg=4, argval='>', argrepr='>', offset=18, starts_line=None, is_jump_target=False)
Instruction(opname='POP_JUMP_IF_FALSE', opcode=114, arg=40, argval=40, argrepr='', offset=20, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=22, starts_line=33, is_jump_target=True)
Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval=1.0, argrepr='1.0', offset=24, starts_line=None, is_jump_target=False)
Instruction(opname='INPLACE_ADD', opcode=55, arg=None, argval=None, argrepr='', offset=26, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=1, argval='x', argrepr='x', offset=28, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='self', argrepr='self', offset=30, starts_line=34, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=1, argval='linear', argrepr='linear', offset=32, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=34, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=36, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=38, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=40, starts_line=35, is_jump_target=True)
Instruction(opname='LOAD_CONST', opcode=100, arg=3, argval=3.0, argrepr='3.0', offset=42, starts_line=None, is_jump_target=False)
Instruction(opname='INPLACE_ADD', opcode=55, arg=None, argval=None, argrepr='', offset=44, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=1, argval='x', argrepr='x', offset=46, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='self', argrepr='self', offset=48, starts_line=36, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=2, argval='relu', argrepr='relu', offset=50, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='self', argrepr='self', offset=52, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=1, argval='linear', argrepr='linear', offset=54, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=56, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=58, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=60, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=62, starts_line=None, is_jump_target=False)


create_call_resume_at - __resume_at_38_2 - new_code:
Instruction(opname='JUMP_ABSOLUTE', opcode=113, arg=40, argval=40, argrepr='', offset=0, starts_line=32, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=2, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval=1.0, argrepr='1.0', offset=4, starts_line=None, is_jump_target=False)
Instruction(opname='INPLACE_SUBTRACT', opcode=56, arg=None, argval=None, argrepr='', offset=6, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=1, argval='x', argrepr='x', offset=8, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=10, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=0, argval='sum', argrepr='sum', offset=12, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=0, argval=0, argrepr='', offset=14, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=2, argval=0.0, argrepr='0.0', offset=16, starts_line=None, is_jump_target=False)
Instruction(opname='COMPARE_OP', opcode=107, arg=4, argval='>', argrepr='>', offset=18, starts_line=None, is_jump_target=False)
Instruction(opname='POP_JUMP_IF_FALSE', opcode=114, arg=40, argval=40, argrepr='', offset=20, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=22, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval=1.0, argrepr='1.0', offset=24, starts_line=None, is_jump_target=False)
Instruction(opname='INPLACE_ADD', opcode=55, arg=None, argval=None, argrepr='', offset=26, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=1, argval='x', argrepr='x', offset=28, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='self', argrepr='self', offset=30, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=1, argval='linear', argrepr='linear', offset=32, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=34, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=36, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=38, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=40, starts_line=35, is_jump_target=True)
Instruction(opname='LOAD_CONST', opcode=100, arg=3, argval=3.0, argrepr='3.0', offset=42, starts_line=None, is_jump_target=False)
Instruction(opname='INPLACE_ADD', opcode=55, arg=None, argval=None, argrepr='', offset=44, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=1, argval='x', argrepr='x', offset=46, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='self', argrepr='self', offset=48, starts_line=36, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=2, argval='relu', argrepr='relu', offset=50, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='self', argrepr='self', offset=52, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=1, argval='linear', argrepr='linear', offset=54, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='x', argrepr='x', offset=56, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=58, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=60, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=62, starts_line=None, is_jump_target=False)

ORIGINAL BYTECODE forward demos/slide/target_4_module.py line 29
 31           0 LOAD_FAST                1 (x)
              2 LOAD_CONST               1 (1.0)
              4 INPLACE_SUBTRACT
              6 STORE_FAST               1 (x)

 32           8 LOAD_FAST                1 (x)
             10 LOAD_METHOD              0 (sum)
             12 CALL_METHOD              0
             14 LOAD_CONST               2 (0.0)
             16 COMPARE_OP               4 (>)
             18 POP_JUMP_IF_FALSE       38

 33          20 LOAD_FAST                1 (x)
             22 LOAD_CONST               1 (1.0)
             24 INPLACE_ADD
             26 STORE_FAST               1 (x)

 34          28 LOAD_FAST                0 (self)
             30 LOAD_METHOD              1 (linear)
             32 LOAD_FAST                1 (x)
             34 CALL_METHOD              1
             36 RETURN_VALUE

 35     >>   38 LOAD_FAST                1 (x)
             40 LOAD_CONST               3 (3.0)
             42 INPLACE_ADD
             44 STORE_FAST               1 (x)

 36          46 LOAD_FAST                0 (self)
             48 LOAD_METHOD              2 (relu)
             50 LOAD_FAST                0 (self)
             52 LOAD_METHOD              1 (linear)
             54 LOAD_FAST                1 (x)
             56 CALL_METHOD              1
             58 CALL_METHOD              1
             60 RETURN_VALUE


MODIFIED BYTECODE forward demos/slide/target_4_module.py line 29
 29           0 LOAD_GLOBAL              3 (__compiled_fn_0)
              2 LOAD_FAST                1 (x)
              4 CALL_FUNCTION            1
              6 UNPACK_SEQUENCE          2
              8 STORE_FAST               1 (x)
             10 POP_JUMP_IF_FALSE       22
             12 LOAD_GLOBAL              4 (__resume_at_20_1)
             14 LOAD_FAST                0 (self)
             16 LOAD_FAST                1 (x)
             18 CALL_FUNCTION            2
             20 RETURN_VALUE
        >>   22 LOAD_GLOBAL              5 (__resume_at_38_2)
             24 LOAD_FAST                0 (self)
             26 LOAD_FAST                1 (x)
             28 CALL_FUNCTION            2
             30 RETURN_VALUE


[2023-06-06 16:42:57,257] torch._dynamo.convert_frame.__guards: [DEBUG] GUARDS:
  ___is_grad_enabled()
  not ___are_deterministic_algorithms_enabled()
  utils_device.CURRENT_DEVICE == None
[2023-06-06 16:42:57,257] torch._dynamo.eval_frame: [DEBUG] skipping _fn /repos/gglin001/pytorch/torch/_dynamo/eval_frame.py
[2023-06-06 16:42:57,257] torch._dynamo.eval_frame: [DEBUG] skipping nothing /repos/gglin001/pytorch/torch/_dynamo/eval_frame.py
[2023-06-06 16:42:57,257] torch._dynamo.eval_frame: [DEBUG] skipping __exit__ /opt/conda/envs/pyenv/lib/python3.8/contextlib.py
[2023-06-06 16:42:57,257] torch._dynamo.eval_frame: [DEBUG] skipping __exit__ /opt/conda/envs/pyenv/lib/python3.8/contextlib.py
[2023-06-06 16:42:57,257] torch._dynamo.symbolic_convert: [INFO] Step 1: torchdynamo start tracing <resume in forward> demos/slide/target_4_module.py:32
[2023-06-06 16:42:57,258] torch._dynamo.variables.builder: [DEBUG] wrap_to_fake L['x'] (10, 10) None None
[2023-06-06 16:42:57,258] torch._dynamo.symbolic_convert: [DEBUG] TRACE JUMP_ABSOLUTE 40 []
[2023-06-06 16:42:57,258] torch._dynamo.symbolic_convert: [DEBUG] TRACE starts_line demos/slide/target_4_module.py:35
[2023-06-06 16:42:57,258] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_FAST x []
[2023-06-06 16:42:57,258] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_CONST 3.0 [TensorVariable()]
[2023-06-06 16:42:57,258] torch._dynamo.symbolic_convert: [DEBUG] TRACE INPLACE_ADD None [TensorVariable(), ConstantVariable(float)]
[2023-06-06 16:42:57,259] torch._dynamo.symbolic_convert: [DEBUG] TRACE STORE_FAST x [TensorVariable()]
[2023-06-06 16:42:57,259] torch._dynamo.symbolic_convert: [DEBUG] TRACE starts_line demos/slide/target_4_module.py:36
[2023-06-06 16:42:57,259] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_FAST self []
[2023-06-06 16:42:57,259] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_ATTR relu [NNModuleVariable()]
[2023-06-06 16:42:57,259] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_FAST self [NNModuleVariable()]
[2023-06-06 16:42:57,259] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_ATTR linear [NNModuleVariable(), NNModuleVariable()]
[2023-06-06 16:42:57,260] torch._dynamo.symbolic_convert: [DEBUG] TRACE LOAD_FAST x [NNModuleVariable(), NNModuleVariable()]
[2023-06-06 16:42:57,260] torch._dynamo.symbolic_convert: [DEBUG] TRACE CALL_FUNCTION 1 [NNModuleVariable(), NNModuleVariable(), TensorVariable()]
[2023-06-06 16:42:57,264] torch._dynamo.symbolic_convert: [DEBUG] TRACE CALL_FUNCTION 1 [NNModuleVariable(), TensorVariable()]
[2023-06-06 16:42:57,265] torch._dynamo.symbolic_convert: [DEBUG] TRACE RETURN_VALUE None [TensorVariable()]
[2023-06-06 16:42:57,266] torch._dynamo.symbolic_convert: [INFO] Step 1: torchdynamo done tracing <resume in forward> (RETURN_VALUE)
[2023-06-06 16:42:57,266] torch._dynamo.symbolic_convert: [DEBUG] RETURN_VALUE triggered compile
[2023-06-06 16:42:57,266] torch._dynamo.output_graph: [DEBUG] COMPILING GRAPH due to GraphCompileReason(reason='return_value', user_stack=[<FrameSummary file demos/slide/target_4_module.py, line 36 in <resume in forward>>], graph_break=False)
compile_and_call_fx_graph - log starts
[2023-06-06 16:42:57,266] torch._dynamo.output_graph.__graph_code: [DEBUG] TRACED GRAPH
 ===== __compiled_fn_3 =====
 <eval_with_key>.1 class GraphModule(torch.nn.Module):
    def forward(self, L_x_ : torch.Tensor):
        l_x_ = L_x_

        # File: demos/slide/target_4_module.py:35, code: x += 3.0
        l_x_ += 3.0;  iadd = l_x_;  l_x_ = None

        # File: demos/slide/target_4_module.py:36, code: return self.relu(self.linear(x))
        l__self___linear = self.L__self___linear(iadd);  iadd = None
        l__self___relu = self.L__self___relu(l__self___linear);  l__self___linear = None
        return (l__self___relu,)


[2023-06-06 16:42:57,266] torch._dynamo.output_graph.__graph: [DEBUG] TRACED GRAPH
 __compiled_fn_3 <eval_with_key>.1 opcode         name              target                    args                  kwargs
-------------  ----------------  ------------------------  --------------------  --------
placeholder    l_x_              L_x_                      ()                    {}
call_function  iadd              <built-in function iadd>  (l_x_, 3.0)           {}
call_module    l__self___linear  L__self___linear          (iadd,)               {}
call_module    l__self___relu    L__self___relu            (l__self___linear,)   {}
output         output            output                    ((l__self___relu,),)  {}

[2023-06-06 16:42:57,267] torch._dynamo.output_graph: [INFO] Step 2: calling compiler function my_compiler
my_compiler() called with FX graph:
[2023-06-06 16:42:57,267] torch._dynamo.output_graph: [INFO] Step 2: done compiler function my_compiler

compile_and_call_fx_graph - compiled_fn before disable(): __compiled_fn_3:
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='L_x_', argrepr='L_x_', offset=0, starts_line=5, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=2, argval='l_x_', argrepr='l_x_', offset=2, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=2, argval='l_x_', argrepr='l_x_', offset=4, starts_line=6, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval=3.0, argrepr='3.0', offset=6, starts_line=None, is_jump_target=False)
Instruction(opname='INPLACE_ADD', opcode=55, arg=None, argval=None, argrepr='', offset=8, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=2, argval='l_x_', argrepr='l_x_', offset=10, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=2, argval='l_x_', argrepr='l_x_', offset=12, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=3, argval='iadd', argrepr='iadd', offset=14, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=16, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=2, argval='l_x_', argrepr='l_x_', offset=18, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='self', argrepr='self', offset=20, starts_line=7, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=0, argval='L__self___linear', argrepr='L__self___linear', offset=22, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=3, argval='iadd', argrepr='iadd', offset=24, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=1, argval=1, argrepr='', offset=26, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=4, argval='l__self___linear', argrepr='l__self___linear', offset=28, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=30, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=3, argval='iadd', argrepr='iadd', offset=32, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='self', argrepr='self', offset=34, starts_line=8, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=1, argval='L__self___relu', argrepr='L__self___relu', offset=36, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=4, argval='l__self___linear', argrepr='l__self___linear', offset=38, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=1, argval=1, argrepr='', offset=40, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=5, argval='l__self___relu', argrepr='l__self___relu', offset=42, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=44, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=4, argval='l__self___linear', argrepr='l__self___linear', offset=46, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=5, argval='l__self___relu', argrepr='l__self___relu', offset=48, starts_line=9, is_jump_target=False)
Instruction(opname='BUILD_TUPLE', opcode=102, arg=1, argval=1, argrepr='', offset=50, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=52, starts_line=None, is_jump_target=False)


compile_and_call_fx_graph - compiled_fn after disable(): __compiled_fn_3:
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=0, argval='isinstance', argrepr='isinstance', offset=0, starts_line=268, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=4, argval='self', argrepr='self', offset=2, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=1, argval='DisableContext', argrepr='DisableContext', offset=4, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=2, argval=2, argrepr='', offset=6, starts_line=None, is_jump_target=False)
Instruction(opname='POP_JUMP_IF_TRUE', opcode=115, arg=48, argval=48, argrepr='', offset=8, starts_line=267, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=2, argval='torch', argrepr='torch', offset=10, starts_line=269, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=3, argval='fx', argrepr='fx', offset=12, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=4, argval='_symbolic_trace', argrepr='_symbolic_trace', offset=14, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=5, argval='is_fx_tracing', argrepr='is_fx_tracing', offset=16, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=0, argval=0, argrepr='', offset=18, starts_line=None, is_jump_target=False)
Instruction(opname='POP_JUMP_IF_FALSE', opcode=114, arg=48, argval=48, argrepr='', offset=20, starts_line=267, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=6, argval='config', argrepr='config', offset=22, starts_line=271, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=7, argval='error_on_nested_fx_trace', argrepr='error_on_nested_fx_trace', offset=24, starts_line=None, is_jump_target=False)
Instruction(opname='POP_JUMP_IF_FALSE', opcode=114, arg=38, argval=38, argrepr='', offset=26, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=8, argval='RuntimeError', argrepr='RuntimeError', offset=28, starts_line=272, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval='Detected that you are using FX to symbolically trace a dynamo-optimized function. This is not supported at the moment.', argrepr="'Detected that you are using FX to symbolically trace a dynamo-optimized function. This is not supported at the moment.'", offset=30, starts_line=273, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=32, starts_line=272, is_jump_target=False)
Instruction(opname='RAISE_VARARGS', opcode=130, arg=1, argval=1, argrepr='', offset=34, starts_line=None, is_jump_target=False)
Instruction(opname='JUMP_FORWARD', opcode=110, arg=10, argval=48, argrepr='to 48', offset=36, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=2, argval='fn', argrepr='fn', offset=38, starts_line=277, is_jump_target=True)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='args', argrepr='args', offset=40, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='kwargs', argrepr='kwargs', offset=42, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION_EX', opcode=142, arg=1, argval=1, argrepr='', offset=44, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=46, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=3, argval='on_enter', argrepr='on_enter', offset=48, starts_line=279, is_jump_target=True)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=0, argval=0, argrepr='', offset=50, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=52, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=9, argval='set_eval_frame', argrepr='set_eval_frame', offset=54, starts_line=280, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=1, argval='callback', argrepr='callback', offset=56, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=58, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=2, argval='prior', argrepr='prior', offset=60, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=0, argval='backend_ctx_ctor', argrepr='backend_ctx_ctor', offset=62, starts_line=281, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=0, argval=0, argrepr='', offset=64, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=3, argval='backend_ctx', argrepr='backend_ctx', offset=66, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=3, argval='backend_ctx', argrepr='backend_ctx', offset=68, starts_line=282, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=10, argval='__enter__', argrepr='__enter__', offset=70, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=0, argval=0, argrepr='', offset=72, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=74, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=11, argval='enable_dynamic', argrepr='enable_dynamic', offset=76, starts_line=283, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=4, argval='self', argrepr='self', offset=78, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=12, argval='dynamic', argrepr='dynamic', offset=80, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=4, argval='self', argrepr='self', offset=82, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_ATTR', opcode=106, arg=13, argval='export', argrepr='export', offset=84, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=2, argval=2, argrepr='', offset=86, starts_line=None, is_jump_target=False)
Instruction(opname='STORE_FAST', opcode=125, arg=4, argval='dynamic_ctx', argrepr='dynamic_ctx', offset=88, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=4, argval='dynamic_ctx', argrepr='dynamic_ctx', offset=90, starts_line=284, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=10, argval='__enter__', argrepr='__enter__', offset=92, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=0, argval=0, argrepr='', offset=94, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=96, starts_line=None, is_jump_target=False)
Instruction(opname='SETUP_FINALLY', opcode=122, arg=14, argval=114, argrepr='to 114', offset=98, starts_line=285, is_jump_target=False)
Instruction(opname='LOAD_DEREF', opcode=136, arg=2, argval='fn', argrepr='fn', offset=100, starts_line=288, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=0, argval='args', argrepr='args', offset=102, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=1, argval='kwargs', argrepr='kwargs', offset=104, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION_EX', opcode=142, arg=1, argval=1, argrepr='', offset=106, starts_line=None, is_jump_target=False)
Instruction(opname='POP_BLOCK', opcode=87, arg=None, argval=None, argrepr='', offset=108, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FINALLY', opcode=162, arg=2, argval=114, argrepr='to 114', offset=110, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=112, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_GLOBAL', opcode=116, arg=9, argval='set_eval_frame', argrepr='set_eval_frame', offset=114, starts_line=290, is_jump_target=True)
Instruction(opname='LOAD_FAST', opcode=124, arg=2, argval='prior', argrepr='prior', offset=116, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_FUNCTION', opcode=131, arg=1, argval=1, argrepr='', offset=118, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=120, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=4, argval='dynamic_ctx', argrepr='dynamic_ctx', offset=122, starts_line=291, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=14, argval='__exit__', argrepr='__exit__', offset=124, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=126, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=128, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=130, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=3, argval=3, argrepr='', offset=132, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=134, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_FAST', opcode=124, arg=3, argval='backend_ctx', argrepr='backend_ctx', offset=136, starts_line=292, is_jump_target=False)
Instruction(opname='LOAD_METHOD', opcode=160, arg=14, argval='__exit__', argrepr='__exit__', offset=138, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=140, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=142, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=144, starts_line=None, is_jump_target=False)
Instruction(opname='CALL_METHOD', opcode=161, arg=3, argval=3, argrepr='', offset=146, starts_line=None, is_jump_target=False)
Instruction(opname='POP_TOP', opcode=1, arg=None, argval=None, argrepr='', offset=148, starts_line=None, is_jump_target=False)
Instruction(opname='END_FINALLY', opcode=88, arg=None, argval=None, argrepr='', offset=150, starts_line=None, is_jump_target=False)
Instruction(opname='LOAD_CONST', opcode=100, arg=0, argval=None, argrepr='None', offset=152, starts_line=None, is_jump_target=False)
Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=154, starts_line=None, is_jump_target=False)

ORIGINAL BYTECODE <resume in forward> demos/slide/target_4_module.py line 32
 32           0 JUMP_ABSOLUTE           40
              2 LOAD_FAST                1 (x)
              4 LOAD_CONST               1 (1.0)
              6 INPLACE_SUBTRACT
              8 STORE_FAST               1 (x)
             10 LOAD_FAST                1 (x)
             12 LOAD_ATTR                0 (sum)
             14 CALL_FUNCTION            0
             16 LOAD_CONST               2 (0.0)
             18 COMPARE_OP               4 (>)
             20 POP_JUMP_IF_FALSE       40
             22 LOAD_FAST                1 (x)
             24 LOAD_CONST               1 (1.0)
             26 INPLACE_ADD
             28 STORE_FAST               1 (x)
             30 LOAD_FAST                0 (self)
             32 LOAD_ATTR                1 (linear)
             34 LOAD_FAST                1 (x)
             36 CALL_FUNCTION            1
             38 RETURN_VALUE

 35     >>   40 LOAD_FAST                1 (x)
             42 LOAD_CONST               3 (3.0)
             44 INPLACE_ADD
             46 STORE_FAST               1 (x)

 36          48 LOAD_FAST                0 (self)
             50 LOAD_ATTR                2 (relu)
             52 LOAD_FAST                0 (self)
             54 LOAD_ATTR                1 (linear)
             56 LOAD_FAST                1 (x)
             58 CALL_FUNCTION            1
             60 CALL_FUNCTION            1
             62 RETURN_VALUE


MODIFIED BYTECODE <resume in forward> demos/slide/target_4_module.py line 32
 32           0 LOAD_GLOBAL              3 (__compiled_fn_3)
              2 LOAD_FAST                1 (x)
              4 CALL_FUNCTION            1
              6 UNPACK_SEQUENCE          1
              8 RETURN_VALUE


[2023-06-06 16:42:57,269] torch._dynamo.convert_frame.__guards: [DEBUG] GUARDS:
  ___check_obj_id(L['self'], 140455024435840)
  ___is_grad_enabled()
  not ___are_deterministic_algorithms_enabled()
  utils_device.CURRENT_DEVICE == None
torch.Size([10, 10])
(pyenv) root@allen-archlinux:.../pytorch#
(pyenv) root@allen-archlinux:.../pytorch#
